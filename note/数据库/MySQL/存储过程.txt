
●. 定义：就是将一些复杂的SQL进行封装，类似于Java中的method

●. 语法：
  1). 创建
    CREATE PROCEDURE 过程名 (类型 参数名 数据类型, ...)
      BEGIN
        ...
      END
    参数类型：
      IN      参数的值必须在调用存储过程时指定，在存储过程中修改该参数的值不能被返回，为默认值
      OUT     该值可在存储过程内部被改变，并可返回
      INOUT   调用时指定，并且可被改变和返回
  2). 调用
    CALL 过程名 (参数...)
  3). 删除
    DROP PROCEDURE 存储过程名;
  4). 创建变量
    DECLARE 参数名 [,参数名...] 数据类型 [DEFAULT value];
  5). 区块
    BEGIN
        ...
      END
    也可以给区块起别名，如：
    lable:BEGIN
    ...........
    END lable;
  6). 条件语句
    if 条件 then
        ...
    else
        ...
    end if;
  7). 循环语句
    ①.while 循环，同 while(){};
      [label:] WHILE 条件 DO
          ...
      END WHILE [label] ;
    ②.loop 循环，无条件循环，用leave离开循环
      [label:] LOOP
          ...
      END LOOP [label];
    ③.repeat until 循环，同java的 do{}while();
      [label:] REPEAT
          ...
      UNTIL 条件
      END REPEAT [label] ;

●. Tips
  1).在创建存储过程前需要更改MySQL默认的分隔符(DELIMITER 分隔符)，防止编译器把存储过程当成SQL语句进行处理，导致报错，
    存储过程结束后，需要还原分隔符(DELIMITER ;)。
  2).如果 MySQL 存储过程中包含多条 MySQL 语句，则需要 begin end 关键字。
  3).因为 MySQL 存储过程参数没有默认值，所以在调用 MySQL 存储过程时候，不能省略参数。
    可以用 null 来替代。

●. demo
  DROP PROCEDURE IF EXISTS `proc_if`;
  DROP PROCEDURE IF EXISTS `proc_while`;
  DROP PROCEDURE IF EXISTS `proc_loop`;
  DROP PROCEDURE IF EXISTS `proc_repeat`;
  DELIMITER $$ #更改MySQL默认的分隔符
  CREATE PROCEDURE `proc_if`(IN param INT, OUT result INT)
    BEGIN
      IF param > 3 THEN
        SET result = param * 5;
      ELSE
        SET result = param * 3;
      END IF ;
    END $$
  CREATE PROCEDURE `proc_while`(IN param INT, OUT result INT)
    BEGIN
      SET result = 0;
      WHILE param < 5 DO
        SET result = result + param;
        SET param = param + 1;
      END WHILE ;
    END $$
  CREATE PROCEDURE `proc_loop`(IN param INT, OUT result INT)
    BEGIN
      rone:LOOP
        SET param = param + 1;
        SET result = param;
        IF param > 10 THEN
          LEAVE rone ;
        END IF ;
      END LOOP ;
    END $$
  CREATE PROCEDURE `proc_repeat`(IN param INT, OUT result INT)
    BEGIN
      DECLARE int_param INT;
      SET result = 0;
      REPEAT
        SET int_param = result + param;
        SET result = int_param;
        SET param = param + 1;
      UNTIL param > 10
      END REPEAT ;
    END $$
  DELIMITER ; #还原MySQL默认的分隔符

  CALL proc_if(5, @param_first);
  CALL proc_if(2, @param_second);
  CALL proc_while(1, @param_thrid);
  CALL proc_loop(1, @param_fourth);
  CALL proc_repeat(1, @param_fifth);
  SELECT @param_first, @param_second, @param_thrid, @param_fourth, @param_fifth;

